<?xml version="1.0"?>
<launch>
    <!-- 
        The robot can be controlled either through CAN bus or UART port. Make sure the hardware
        interface is set up correctly before attempting to connect to the robot.
        
        You only need to specify the port name, such as "can0", "/dev/ttyUSB0". The port should 
        operate with the following configuration:
        
        * CAN bus: 500k
        * UART: 115200, Parity None, 8-bit Data, 1 Stop Bit 
    -->
    <arg name="port_name" default="can0" />
    <arg name="simulated_robot" default="false" />
    <arg name="publish_tf" default="false" />

    <node name="hunter_base_node" pkg="hunter_base" type="hunter_base_node" output="screen">
        <param name="port_name" type="string" value="$(arg port_name)" />
        <param name="simulated_robot" type="bool" value="$(arg simulated_robot)" />
        <param name="publish_tf" type="bool" value="$(arg publish_tf)" />

        <param name="odom_frame" type="string" value="hunter_odom" />
        <param name="base_frame" type="string" value="hunter_base_link" />
    </node>
<!--add form-->
    <!-- 加载机器人模型参数 -->
    <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find scout_description)/urdf/scout_v2.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="state_publisher">
        <param name="publish_frequency" type="double" value="5.0" />
    </node>
    <!--node name="base2laser" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 1 /base_link /rslidar 50"/-->

    <!-- 里程计估算 -->
    <!-- <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <remap from="robot_pose_ekf/odom_combined" to="odom_combined"/>
        <param name="freq" value="10.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="publish_tf" value="flase"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="flase"/>
        <param name="vo_used" value="flase"/>
        <param name="output_frame" value="odom"/>
    </node> -->

</launch>
